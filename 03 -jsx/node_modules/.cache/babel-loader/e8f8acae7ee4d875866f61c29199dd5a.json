{"ast":null,"code":"var _jsxFileName = \"/Users/JamesNa/scripts/Web Dev/React/03 -jsx/src/App.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // This is a react component (custom html element)\n// It is the apps root component\n// all other components will be rendered within it\n// a component is a class/function that renders or returns JSX\n// a component is a custom HTML element\n\nexport default function App() {\n  // JSX is js XML\n  // it looks like HTML but compiles into JS\n  // it is syntatic sugar for React.createElement()\n  // these two lines are equivilent\n  const heading1 = React.createElement('h1', null, null, 'My Heading');\n  const heading2 = /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 20\n    }\n  }, \"My Heading\"); // JSX Element attributes must be camelCase\n  // onclick is wrong; onClick is right\n  // HTML attributes that are JS reserverd words are not allowed. e.g. class\n  // you can embed expressions in JSX using the braces {}\n  // e.g. <p>Hello {name}</p>\n  // you cannot embed if statments or loops inside JSX only expressions\n  // attributes must be surrounded by either quotation marks or braces but no both\n  // you can render/return only ONE JSX element\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 mt-4 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"JSX\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/JamesNa/scripts/Web Dev/React/03 -jsx/src/App.js"],"names":["React","App","heading1","createElement","heading2"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP,C,CAIA;AACA;AACA;AAEA;AACA;;AACA,eAAe,SAASC,GAAT,GAAe;AAE5B;AACA;AACA;AACA;AACA,QAAMC,QAAQ,GAAGF,KAAK,CAACG,aAAN,CAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,YAAtC,CAAjB;AACA,QAAMC,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAjB,CAP4B,CAS5B;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n// This is a react component (custom html element)\n// It is the apps root component\n// all other components will be rendered within it\n\n// a component is a class/function that renders or returns JSX\n// a component is a custom HTML element\nexport default function App() {\n\n  // JSX is js XML\n  // it looks like HTML but compiles into JS\n  // it is syntatic sugar for React.createElement()\n  // these two lines are equivilent\n  const heading1 = React.createElement('h1', null, null, 'My Heading');\n  const heading2 = <h1>My Heading</h1>;\n\n  // JSX Element attributes must be camelCase\n  // onclick is wrong; onClick is right\n  // HTML attributes that are JS reserverd words are not allowed. e.g. class\n\n  // you can embed expressions in JSX using the braces {}\n  // e.g. <p>Hello {name}</p>\n  // you cannot embed if statments or loops inside JSX only expressions\n  // attributes must be surrounded by either quotation marks or braces but no both\n\n\n  // you can render/return only ONE JSX element\n  return (\n    <div className=\"container\">\n      <h1 className=\"display-4 mt-4 mb-4\">JSX</h1>\n      <hr />\n    </div>\n\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}