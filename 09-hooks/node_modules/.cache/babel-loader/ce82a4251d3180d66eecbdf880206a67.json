{"ast":null,"code":"var _jsxFileName = \"/Users/JamesNa/scripts/Web Dev/React/09-hooks/src/components/DeepState.js\";\nimport React, { useState } from 'react';\nexport default function DeepState(props) {\n  const [person, setPerson] = useState({\n    name: 'Tom',\n    age: 25\n  });\n  const {\n    name,\n    age\n  } = person;\n\n  const handleButtonClickBad = event => {\n    // This will NOT trigger a re-render\n    // The ref we are setting is the same as the old ref\n    // react tests to determine if a re-render is needed by doing this:\n    // oldPerson === newPerson\n    person.name = 'Thomas';\n    setPerson(person);\n  };\n\n  const handleButtonClickGood = event => {\n    setPerson(prevPerson => ({ ...prevPerson,\n      name: 'Thomas'\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"My name is \", name, \" and I am \", age, \" years old\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleButtonClick => setPerson(prevPerson => ({ ...prevPerson,\n      name: 'Thomas'\n    })),\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Changes the perssons name \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleButtonClickBad,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Changes the perssons name badly\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleButtonClickGood,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Changes the perssons name well\"));\n}","map":{"version":3,"sources":["/Users/JamesNa/scripts/Web Dev/React/09-hooks/src/components/DeepState.js"],"names":["React","useState","DeepState","props","person","setPerson","name","age","handleButtonClickBad","event","handleButtonClickGood","prevPerson","handleButtonClick"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE,KAAP;AAAcC,IAAAA,GAAG,EAAE;AAAnB,GAAD,CAApC;AACA,QAAM;AAACD,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAcH,MAApB;;AAGA,QAAMI,oBAAoB,GAAGC,KAAK,IAAI;AAClC;AACA;AACA;AACA;AACAL,IAAAA,MAAM,CAACE,IAAP,GAAc,QAAd;AACAD,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH,GAPD;;AASA,QAAMM,qBAAqB,GAAGD,KAAK,IAAI;AACnCJ,IAAAA,SAAS,CAACM,UAAU,KAAK,EAAC,GAAGA,UAAJ;AAAgBL,MAAAA,IAAI,EAAE;AAAtB,KAAL,CAAX,CAAT;AACH,GAFD;;AAGA,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACgBA,IADhB,gBACgCC,GADhC,eADJ,eAII;AAAQ,IAAA,OAAO,EAAGK,iBAAD,IAAuBP,SAAS,CAACM,UAAU,KAAI,EAAC,GAAGA,UAAJ;AAAgBL,MAAAA,IAAI,EAAE;AAAtB,KAAJ,CAAX,CAAjD;AAAmG,IAAA,SAAS,EAAC,iBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJJ,eAKI;AAAQ,IAAA,OAAO,EAAEE,oBAAjB;AAAuC,IAAA,SAAS,EAAC,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCALJ,eAMI;AAAQ,IAAA,OAAO,EAAEE,qBAAjB;AAAwC,IAAA,SAAS,EAAC,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCANJ,CADJ;AAWH","sourcesContent":["import React, {useState} from 'react';\n\nexport default function DeepState(props) {\n    const [person, setPerson] = useState({name: 'Tom', age: 25});\n    const {name, age} = person;\n\n\n    const handleButtonClickBad = event => {\n        // This will NOT trigger a re-render\n        // The ref we are setting is the same as the old ref\n        // react tests to determine if a re-render is needed by doing this:\n        // oldPerson === newPerson\n        person.name = 'Thomas';\n        setPerson(person);\n    }\n\n    const handleButtonClickGood = event => {\n        setPerson(prevPerson => ({...prevPerson, name: 'Thomas'}))\n    }\n    return (\n        <>\n            <p>\n                My name is {name} and I am {age} years old\n            </p>\n            <button onClick={(handleButtonClick) => setPerson(prevPerson =>({...prevPerson, name: 'Thomas'}))} className='btn btn-primary'>Changes the perssons name </button> \n            <button onClick={handleButtonClickBad} className='btn btn-primary'>Changes the perssons name badly</button> \n            <button onClick={handleButtonClickGood} className='btn btn-primary'>Changes the perssons name well</button> \n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}